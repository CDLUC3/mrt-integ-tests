version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - # Get semantic tags for commit otherwise get all tags for commit, sort and choose the last value
    - TAG=`(git tag --contains $COMMIT | egrep "^[0-9]+\.[0-9]+\.[0-9]+$" || git tag --contains $COMMIT || echo '') | sort | tail -1`
    - |
      if [[ "$MODE" == "OnPush" ]]
      then
        # Get Tag || Get Branch || Alternate Branch Lookup || Get Committ
        BRANCHTAG=`echo $TAG | grep . || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
      else
        BRANCHTAG=$BRANCHNAME
      fi
    - echo "Branchtag ${BRANCHTAG}; COMMITDATE=${COMMITDATE}; REPONAME=${REPONAME}; BRANCHNAME=${BRANCHNAME}"

    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}
    - SSM_ROOT_PATH=/uc3/mrt/dev/
    - DATAURL=`aws ssm get-parameter --name /uc3/mrt/dev/integ-tests/data-path --query "Parameter.Value" --output text`

  build:
    on-failure: ABORT
    commands:

    - |
      if [ "$INTEG_TEST_ENV" == "ecs" ]
      then
        echo "Running integration tests against ECS"
        echo "Pulling images"
        docker-compose pull
        ui=$(aws servicediscovery discover-instances \
          --service-name ui --namespace-name merritt | \
          jq -r ".Instances[0].Attributes.AWS_INSTANCE_IPV4")
        echo "UI IP: $ui"
        docker-compose up -d chrome
        echo "Chrome Started"
        docker-compose run -d --rm \
          -e INTEG_TEST_ENV=development \
          -e PREVIEW_URL=http://${ui}:8086 \
          -e INGEST_FILES=$INGEST_FILES \
          -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
          -e SSM_ROOT_PATH=$SSM_ROOT_PATH mrt-integ-tests
        sleep 10
        docker-compose logs chrome
        echo "Tests complete"
        docker-compose down
        echo "Stack Down"
      elif [ "$INTEG_TEST_ENV" != "none" ]
      then
        echo "Running integration tests against public URL"
        docker-compose up -d chrome
        echo "Chrome Started"
        docker-compose run --rm \
          -e DATAURL=$DATAURL \
          -e INTEG_TEST_ENV=$INTEG_TEST_ENV \
          -e INGEST_FILES=$INGEST_FILES \
          -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
          -e SSM_ROOT_PATH=$SSM_ROOT_PATH mrt-integ-tests
        echo "Tests complete"
        docker-compose down
        echo "Stack Down"
      else
        docker build --push --quiet \
          -t ${ECR_REGISTRY}/${REPONAME} \
          .
        docker build --push --quiet \
          -t ${ECR_REGISTRY}/mrt-it-chrome \
          --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
          chrome-driver
      fi
