version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - BRANCH=`git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || echo ''`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
    - echo "Branchtag ${BRANCHTAG}; COMMITDATE=${COMMITDATE}; REPONAME=${REPONAME}; BRANCHNAME=${BRANCHNAME}"

    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}
    - INTEG_TEST_ENV=stage
    - INGEST_FILES=none
    - SSM_ROOT_PATH=/uc3/mrt/dev/

  build:
    on-failure: ABORT
    commands:
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/${REPONAME} \
        .
    - |
      docker build --push --quiet \
        -t ${ECR_REGISTRY}/mrt-it-chrome \
        chrome-driver || echo "dockerhub rate limiting may occur"

    - |
      if [ '$INTEG_TEST_ENV' != 'none' ]
      then
        docker-compose up -d chrome
        docker-compose run --rm \
          -e INTEG_TEST_ENV=$INTEG_TEST_ENV \
          -e INGEST_FILES=$INGEST_FILES \
          -e AWS_CONTAINER_CREDENTIALS_RELATIVE_URI=$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI \
          -e SSM_ROOT_PATH=$SSM_ROOT_PATH mrt-integ-tests
        docker-compose down
      fi