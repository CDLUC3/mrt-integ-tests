constants:
  - &AWS
    file_redirect_match: '.*\.s3.us-west-2.amazonaws.com/.*'
  - &MINIO
    file_redirect_match: 'https://cdl.s3.sdsc.edu/.*'
  - &WASABI
    file_redirect_match: 'https://s3.us-east-2.wasabisys.com/.*'
  - &MINIO_LOCAL
    file_redirect_match: 'http://(localhost|uc3-mrtdocker.*-dev.cdlib.org):8088/.*'
globals: &globals
  # full set of files that will be created in a zip ingest in order to test presigned retrieval of each
  encoding-tests-basic: &encoding-tests-basic
    md: 'README.md'
    space: 'README 1.md'
    plus: 'README+2.md'
    percent: 'README %AF.md'
    percent2: 'Test50%majrule.txt'
    percent3: 'Z_5%_400C-bet.xlsx'
    accent: 'README clich√©.md' #Copied from a web page, not utf-8 representation
    pipe: 'README|pipe.md'
  encoding-tests: &encoding-tests
    << : *encoding-tests-basic
    japanese_char: '„Åì„Çì„Å´„Å°„ÅØ.md'
    hebrew_char: '◊©◊ú◊ï◊ù'
    arabic_char: 'ŸÖÿ±ÿ≠ÿ®ÿß'
    emoji: 'file‚ò†‚ò°‚ò¢‚ò£.txt'
    double_dot: 'file..name..with..dots.txt'
    amper: 'file & name.txt'
    math: '‚àëa ‚â§ b.txt'
    encode1: "javoisÃå_et_al_data.xls" #CGI.unescape('javois%CC%8C_et_al_data.xls')
    encode2: "javoi≈°_et_al_data.xls" #CGI.unescape('javoi%C5%A1_et_al_data.xls')
  # https://github.com/CDLUC3/mrt-doc/issues/1183
  #four-byte: &four-byte
  #  ckj_4byte: '†úé†µø.txt'
  #  # note that the following filename does not replicate to Wasabi
  #  # emoji2: 'imagesüôÉemo.md'
  # See the following note about escaping unicode in Yaml. 
  # https://yaml.org/spec/1.2/spec.html#id2708710
  # The behavior differs between single and double quoted values
  backu: &backu
    test: 'test.txt'
    backu_file1: "file\u1234.txt"
    backu_file2: "\u9876.txt"
    backu_file3: 'file\utext.txt'
  diamond: &diamond
    diamond: "hi\uFFFD.txt"
  percent-cases: &percent-cases
    space_space: 'File % .md'
    und_und: 'File%__x.md'
    file00: 'File%00x.md'
    file11: 'File%11x.md'
    fileaa: 'File%aax.md'
    fileAA: 'File%AAx.md'
    filehh: 'File%hhx.md'
    fileHH: 'File%HHx.md'
    excl_excl: 'File%!!x.md'
    quest_quest: 'File%??x.md'
  sleep-times:
    ingest: 80   # run full ingest (ingest, store, inventory)
    assemble: 60 # object assembly ready - increased from 30 to 60 for CodeBuild runs
    download: 30 # assembly zip download
    upload: 10 #allow upload to complete
  # each of the keys listed below will contain a set of files to load
  #   a key is passed with the environment variable INGEST_FILES
  test-files: 
    none:
      encoding-zip:
      ingest-files:
      manifests:
    localid:
      encoding-zip:
      ingest-files:
      manifest-repeat: 20
      manifests:
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_a'
        localid: localid_ver_a
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_b'
        localid: localid_ver_b
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_c'
        localid: localid_ver_c
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_d'
        localid: localid_ver_d
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_e'
        localid: localid_ver_e
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_f'
        localid: localid_ver_f
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_ver_g'
        localid: localid_ver_g
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
    load:
      encoding-zip:
      ingest-files:
      manifests:
      - &test_1KB_100
        coll: merritt_benchmark
        count: 100
        label: 'manufactured_load_A'
        url: "{!ENV: DATAURL}/data.1k"
        md5: '17ed9c0ac6d4687e38b6cd98467556f3'
        ext: '.txt'
      - &test_1MB_100
        coll: merritt_benchmark
        count: 100
        label: 'manufactured_load_E'
        url: "{!ENV: DATAURL}/data.1m"
        md5: '436c3aa0e0225c185e7338d5983279f3'
        ext: '.txt'
      - &test_1MB_25
        coll: cdl_wasabi
        count: 25
        label: 'manufactured_load_B'
        url: "{!ENV: DATAURL}/data.1m"
        md5: '436c3aa0e0225c185e7338d5983279f3'
        ext: '.txt'
      - &test_50MB_25
        coll: merritt_demo
        count: 25
        label: 'manufactured_load_C'
        url: "{!ENV: DATAURL}/data.50m"
        md5: '4100968a18051d5af99c804502a62deb'
        ext: '.txt'
      - &test_1GB_10
        coll: cdl_wasabi
        count: 10
        label: 'manufactured_load_D'
        url: "{!ENV: DATAURL}/data.1g"
        md5: 'fb20ed9c9998a068de73f421d881762f'
        ext: '.txt'
    load-large:
      encoding-zip:
      ingest-files:
      manifests:
      - *test_1KB_100
      - *test_1MB_100
      - *test_1MB_25
      - *test_50MB_25
      - *test_1GB_10
      - &test_5GB_2
        coll: merritt_benchmark
        count: 2
        label: 'manufactured_load_G'
        url: "{!ENV: DATAURL}/data.5g"
        md5: '231bd4a486732216bada94fad0d93ec0'
        what: '5GB Batch Manifest'
        ext: '.txt'
      - &test_10GB_1
        coll: merritt_benchmark
        count: 1
        label: 'manufactured_load_H'
        url: "{!ENV: DATAURL}/data.10g"
        md5: 'a63f496d6b76f318d8f357f0fbe8726e'
        what: '10GB Batch Manifest'
        ext: '.txt'
    default:
      encoding-zip: 
        <<: *encoding-tests-basic
      ingest-files:
      version-files:
        v1file: 'v1_file.md'
    basic-ingest:
      encoding-zip: 
        <<: *encoding-tests-basic
      ingest-files:
        space: 'README 1.md'
        plus: 'README+1.md'
    encoding-tests:
      encoding-zip: 
        <<: *encoding-tests
        # <<: *four-byte
        <<: *percent-cases
    backu-ingest:
      encoding-zip: 
        <<: *backu
      ingest-files:
        <<: *backu
    diamond-ingest:
      encoding-zip: 
        <<: *diamond
      ingest-files:
        <<: *diamond
docker: &docker
  <<: *globals
  sleep-times:
    ingest: 80   # run full ingest (ingest, store, inventory)
    assemble: 60 # object assembly ready
    download: 30 # assembly zip download
    upload: 10 # assembly zip download
  guest_actions:
    collections:
    - coll: cdl_dryaddev
      <<: *MINIO_LOCAL
    collections-no-access:
    - coll: ucla_digital_lib
  non_guest_actions:
    login:
      user: merritt-test
      password: password
    collections:
    - coll: merritt_demo
      <<: *MINIO_LOCAL
      submit: true
docker-devbucket: &docker-devbucket
  <<: *globals
  guest_actions:
    collections:
    - coll: cdl_dryaddev
      <<: *MINIO_LOCAL
    #collections-no-access:
    #- coll: ucla_digital_lib
  non_guest_actions:
    login:
      user: merritt-test
      password: password
    collections:
    - coll: merritt_demo
      <<: *AWS
      submit: true
local: &local
  <<: *globals
  experimental_tests: true
  url: 'http://localhost:8086'
  # The storage state test fails when talking to a minio container vs a live service
  << : *docker
development: &development
  <<: *globals
  experimental_tests: true
  # check_audits: false
  ui_audit_replic: false
  sleep-times:
    ingest: 120   # run full ingest (ingest, store, inventory)
    assemble: 60 # object assembly ready
    download: 30 # assembly zip download
    upload: 10 # assembly zip download
  url: "{!ENV: PREVIEW_URL !DEFAULT: http://ui:8086}"
  # The storage state test fails when talking to a minio container vs a live service
  guest_actions:
    collections:
    collections-no-access:
  non_guest_actions:
    login:
      user: merritt-test
      password: password
    collections:
    - coll: merritt_demo
      <<: *AWS
      submit: true
development-devdb:
  <<: *globals
  experimental_tests: true
  url: "{!ENV: PREVIEW_URL !DEFAULT: http://uc3-mrtdocker01x2-dev.cdlib.org:8086}"
  << : *docker-devbucket
stage: &stage
  <<: *globals
  url: "{!ENV: PREVIEW_URL !DEFAULT: https://merritt-stage.cdlib.org}"
  # Enable single encoding tests with stage ALB
  experimental_tests: true
  expect_atom_content: false
  check_audits: false
  guest_actions:
    collections:
    - coll: merritt_demo_pub
      <<: *MINIO
    collections-no-access:
    - coll: ucla_digital_lib
  non_guest_actions:
    login:
      user: "{!SSM: integ-tests/for-stage/user}"
      password: "{!SSM: integ-tests/for-stage/password}"
    collections:
    - coll: merritt_demo
      <<: *MINIO
      submit: true
    - coll: cdl_wasabi
      <<: *WASABI
      submit: true
stage-wasabi: &stage
  <<: *globals
  url: "{!ENV: PREVIEW_URL !DEFAULT: https://merritt-stage.cdlib.org}"
  # Enable single encoding tests with stage ALB
  experimental_tests: true
  expect_atom_content: true
  check_audits: false
  guest_actions:
    collections:
    - coll: cdl_dashdev
      <<: *AWS
    - coll: ucb_ist_research_hub_doi
      <<: *MINIO
    collections-no-access:
    - coll: ucla_digital_lib
  non_guest_actions:
    login:
      user: "{!SSM: integ-tests/for-stage/user}"
      password: "{!SSM: integ-tests/for-stage/password}"
    collections:
    - coll: cdl_wasabi
      <<: *WASABI
      submit: true
production: &production
  <<: *globals
  url: "{!ENV: PREVIEW_URL !DEFAULT: https://merritt.cdlib.org}"
  expect_atom_content: true
  replic_build_info: true
  ui_audit_replic: true
  guest_actions:
    collections:
    collections-no-access:
    - coll: merritt_demo
  non_guest_actions:
    login:
      user: "{!SSM: integ-tests/for-prod/user}"
      password: "{!SSM: integ-tests/for-prod/password}"
    collections:
    - coll: merritt_demo
      <<: *AWS
      submit: true
preview:
  <<: *globals
  url: "{!ENV: PREVIEW_URL !DEFAULT: https://uc3-mrt-preview-prd.cdlib.org}"
  expect_atom_content: true
  replic_build_info: true
  ui_audit_replic: true
  guest_actions:
    collections:
    collections-no-access:
    - coll: merritt_demo
  non_guest_actions:
    login:
      user: "{!SSM: integ-tests/for-prod/user}"
      password: "{!SSM: integ-tests/for-prod/password}"
    collections:
    - coll: merritt_demo
      <<: *AWS
      submit: true
default:
  <<: *development

